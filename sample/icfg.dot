digraph "ICFG" {
	label="ICFG";

	Node0x5654576661a0 [shape=record,color=blue,label="{NodeID: 98\nRetBlockNode ID: 98   %call26 = call i32 (i8*, ...) @printf(i8* %29, double %25, double %26, double %27, double %28), !dbg !99 \{fun: main\}}"];
	Node0x5654576661a0 -> Node0x5654576660a0[style=solid];
	Node0x5654576660a0 [shape=record,color=black,label="{NodeID: 97\nIntraBlockNode ID: 97   br label %if.end \{fun: main\}}"];
	Node0x5654576660a0 -> Node0x565457663320[style=solid];
	Node0x565457665e70 [shape=record,color=blue,label="{NodeID: 96\nRetBlockNode ID: 96   %call11 = call i32 (i8*, ...) @printf(i8* %15, double %13, double %14), !dbg !64 \{fun: main\}}"];
	Node0x565457665e70 -> Node0x565457665d70[style=solid];
	Node0x565457665d70 [shape=record,color=black,label="{NodeID: 95\nIntraBlockNode ID: 95   br label %if.end27, !dbg !65 \{fun: main\}}"];
	Node0x565457665d70 -> Node0x565457663da0[style=solid];
	Node0x565457665b00 [shape=record,color=red,label="{NodeID: 94\nCallBlockNode ID: 94   %call26 = call i32 (i8*, ...) @printf(i8* %29, double %25, double %26, double %27, double %28), !dbg !99 \{fun: main\}|{|<s1>0x56545763fb90}}"];
	Node0x565457665b00 -> Node0x5654576661a0[style=solid];
	Node0x565457665b00:s1 -> Node0x56545765bc10[style=solid,color=red];
	Node0x56545762e170 [shape=record,color=red,label="{NodeID: 93\nCallBlockNode ID: 93   %call11 = call i32 (i8*, ...) @printf(i8* %15, double %13, double %14), !dbg !64 \{fun: main\}|{|<s1>0x565457648840}}"];
	Node0x56545762e170 -> Node0x565457665e70[style=solid];
	Node0x56545762e170:s1 -> Node0x56545765bc10[style=solid,color=red];
	Node0x5654576657f0 [shape=record,color=black,label="{NodeID: 92\nIntraBlockNode ID: 92   %29 = getelementptr [44 x i8], [44 x i8]* @.str.4, i64 0, i64 0 \{fun: main\}VariantGepPE: [126\<--12]    %29 = getelementptr [44 x i8], [44 x i8]* @.str.4, i64 0, i64 0\{  \}}"];
	Node0x5654576657f0 -> Node0x565457665b00[style=solid];
	Node0x5654576650f0 [shape=record,color=black,label="{NodeID: 91\nIntraBlockNode ID: 91   %15 = getelementptr [32 x i8], [32 x i8]* @.str.2, i64 0, i64 0 \{fun: main\}VariantGepPE: [90\<--8]    %15 = getelementptr [32 x i8], [32 x i8]* @.str.2, i64 0, i64 0\{  \}}"];
	Node0x5654576650f0 -> Node0x56545762e170[style=solid];
	Node0x565457664f30 [shape=record,color=black,label="{NodeID: 90\nIntraBlockNode ID: 90   %28 = load double, double* %imagPart, align 8, !dbg !98 \{fun: main\}}"];
	Node0x565457664f30 -> Node0x5654576657f0[style=solid];
	Node0x565457664d70 [shape=record,color=black,label="{NodeID: 89\nIntraBlockNode ID: 89   %14 = load double, double* %root2, align 8, !dbg !63 \{fun: main\}}"];
	Node0x565457664d70 -> Node0x5654576650f0[style=solid];
	Node0x565457664bb0 [shape=record,color=black,label="{NodeID: 88\nIntraBlockNode ID: 88   %27 = load double, double* %realPart, align 8, !dbg !97 \{fun: main\}}"];
	Node0x565457664bb0 -> Node0x565457664f30[style=solid];
	Node0x5654576649f0 [shape=record,color=black,label="{NodeID: 87\nIntraBlockNode ID: 87   %13 = load double, double* %root1, align 8, !dbg !62 \{fun: main\}}"];
	Node0x5654576649f0 -> Node0x565457664d70[style=solid];
	Node0x565457664830 [shape=record,color=black,label="{NodeID: 86\nIntraBlockNode ID: 86   %26 = load double, double* %imagPart, align 8, !dbg !96 \{fun: main\}}"];
	Node0x565457664830 -> Node0x565457664bb0[style=solid];
	Node0x565457664670 [shape=record,color=black,label="{NodeID: 85\nIntraBlockNode ID: 85   store double %div10, double* %root2, align 8, !dbg !61 \{fun: main\}}"];
	Node0x565457664670 -> Node0x5654576649f0[style=solid];
	Node0x5654576644b0 [shape=record,color=black,label="{NodeID: 84\nIntraBlockNode ID: 84   %25 = load double, double* %realPart, align 8, !dbg !95 \{fun: main\}}"];
	Node0x5654576644b0 -> Node0x565457664830[style=solid];
	Node0x5654576642e0 [shape=record,color=green,label="{NodeID: 83\nFunExitBlockNode ID: 83Exit(\{ ln: 30  cl: 5  fl: example.c \})\n \{fun: main\}}"];
	Node0x565457664120 [shape=record,color=black,label="{NodeID: 82\nIntraBlockNode ID: 82   %div10 = fdiv double %sub8, %mul9, !dbg !60 \{fun: main\}}"];
	Node0x565457664120 -> Node0x565457664670[style=solid];
	Node0x565457663f60 [shape=record,color=black,label="{NodeID: 81\nIntraBlockNode ID: 81   store double %div25, double* %imagPart, align 8, !dbg !94 \{fun: main\}}"];
	Node0x565457663f60 -> Node0x5654576644b0[style=solid];
	Node0x565457663da0 [shape=record,color=black,label="{NodeID: 80\nIntraBlockNode ID: 80   ret i32 0, !dbg !100 \{fun: main\}}"];
	Node0x565457663da0 -> Node0x5654576642e0[style=solid];
	Node0x565457663be0 [shape=record,color=black,label="{NodeID: 79\nIntraBlockNode ID: 79   %mul9 = fmul double 2.000000e+00, %12, !dbg !59 \{fun: main\}}"];
	Node0x565457663be0 -> Node0x565457664120[style=solid];
	Node0x5654576634e0 [shape=record,color=black,label="{NodeID: 78\nIntraBlockNode ID: 78   %div25 = fdiv double %call23, %mul24, !dbg !93 \{fun: main\}}"];
	Node0x5654576634e0 -> Node0x565457663f60[style=solid];
	Node0x56545765e350 [shape=record,color=black,label="{NodeID: 35\nIntraBlockNode ID: 35   %cmp12 = fcmp oeq double %16, 0.000000e+00, !dbg !68 \{fun: main\}}"];
	Node0x56545765e350 -> Node0x56545765e950[style=solid];
	Node0x56545765e190 [shape=record,color=black,label="{NodeID: 34\nIntraBlockNode ID: 34   %fneg = fneg double %7, !dbg !45 \{fun: main\}}"];
	Node0x56545765e190 -> Node0x56545765e510[style=solid];
	Node0x56545765dfd0 [shape=record,color=black,label="{NodeID: 33\nIntraBlockNode ID: 33   %16 = load double, double* %discriminant, align 8, !dbg !66 \{fun: main\}}"];
	Node0x56545765dfd0 -> Node0x56545765e350[style=solid];
	Node0x56545765de30 [shape=record,color=black,label="{NodeID: 32\nIntraBlockNode ID: 32   %7 = load double, double* %b, align 8, !dbg !43 \{fun: main\}}"];
	Node0x56545765de30 -> Node0x56545765e190[style=solid];
	Node0x56545765dc50 [shape=record,color=black,label="{NodeID: 31\nIntraBlockNode ID: 31   br i1 %cmp, label %if.then, label %if.else, !dbg !42 \{fun: main\}}"];
	Node0x56545765dc50 -> Node0x56545765de30[style=solid];
	Node0x56545765dc50 -> Node0x56545765dfd0[style=solid];
	Node0x56545765da90 [shape=record,color=black,label="{NodeID: 30\nIntraBlockNode ID: 30   %cmp = fcmp ogt double %6, 0.000000e+00, !dbg !41 \{fun: main\}}"];
	Node0x56545765da90 -> Node0x56545765dc50[style=solid];
	Node0x56545765d8d0 [shape=record,color=black,label="{NodeID: 29\nIntraBlockNode ID: 29   %6 = load double, double* %discriminant, align 8, !dbg !39 \{fun: main\}}"];
	Node0x56545765d8d0 -> Node0x56545765da90[style=solid];
	Node0x56545765d710 [shape=record,color=black,label="{NodeID: 28\nIntraBlockNode ID: 28   store double %sub, double* %discriminant, align 8, !dbg !38 \{fun: main\}}"];
	Node0x56545765d710 -> Node0x56545765d8d0[style=solid];
	Node0x56545765d550 [shape=record,color=black,label="{NodeID: 27\nIntraBlockNode ID: 27   %sub = fsub double %mul, %mul3, !dbg !37 \{fun: main\}}"];
	Node0x56545765d550 -> Node0x56545765d710[style=solid];
	Node0x56545765d390 [shape=record,color=black,label="{NodeID: 26\nIntraBlockNode ID: 26   %mul3 = fmul double %mul2, %5, !dbg !36 \{fun: main\}}"];
	Node0x56545765d390 -> Node0x56545765d550[style=solid];
	Node0x56545765d1d0 [shape=record,color=black,label="{NodeID: 25\nIntraBlockNode ID: 25   %5 = load double, double* %c, align 8, !dbg !35 \{fun: main\}}"];
	Node0x56545765d1d0 -> Node0x56545765d390[style=solid];
	Node0x56545765cee0 [shape=record,color=black,label="{NodeID: 24\nIntraBlockNode ID: 24   %mul2 = fmul double 4.000000e+00, %4, !dbg !34 \{fun: main\}}"];
	Node0x56545765cee0 -> Node0x56545765d1d0[style=solid];
	Node0x56545765cd20 [shape=record,color=black,label="{NodeID: 23\nIntraBlockNode ID: 23   %4 = load double, double* %a, align 8, !dbg !33 \{fun: main\}}"];
	Node0x56545765cd20 -> Node0x56545765cee0[style=solid];
	Node0x56545765ca30 [shape=record,color=black,label="{NodeID: 22\nIntraBlockNode ID: 22   %mul = fmul double %2, %3, !dbg !32 \{fun: main\}}"];
	Node0x56545765ca30 -> Node0x56545765cd20[style=solid];
	Node0x56545765c870 [shape=record,color=black,label="{NodeID: 21\nIntraBlockNode ID: 21   %3 = load double, double* %b, align 8, !dbg !31 \{fun: main\}}"];
	Node0x56545765c870 -> Node0x56545765ca30[style=solid];
	Node0x56545765c600 [shape=record,color=blue,label="{NodeID: 20\nRetBlockNode ID: 20   %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %1, double* %a, double* %b, double* %c), !dbg !29 \{fun: main\}}"];
	Node0x56545765c600 -> Node0x56545765c500[style=solid];
	Node0x56545765c500 [shape=record,color=black,label="{NodeID: 19\nIntraBlockNode ID: 19   %2 = load double, double* %b, align 8, !dbg !30 \{fun: main\}}"];
	Node0x56545765c500 -> Node0x56545765c870[style=solid];
	Node0x56545765c240 [shape=record,color=yellow,label="{NodeID: 18\nFunEntryBlockNode ID: 18Entry()\n \{fun: __isoc99_scanf\}}"];
	Node0x56545763c3b0 [shape=record,color=red,label="{NodeID: 17\nCallBlockNode ID: 17   %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %1, double* %a, double* %b, double* %c), !dbg !29 \{fun: main\}|{|<s1>0x565457643e98}}"];
	Node0x56545763c3b0 -> Node0x56545765c600[style=solid];
	Node0x56545763c3b0:s1 -> Node0x56545765c240[style=solid,color=red];
	Node0x56545765bea0 [shape=record,color=blue,label="{NodeID: 16\nRetBlockNode ID: 16   %call = call i32 (i8*, ...) @printf(i8* %0), !dbg !28 \{fun: main\}}"];
	Node0x56545765bea0 -> Node0x56545765bda0[style=solid];
	Node0x56545765b070 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   %c = alloca double, align 8 \{fun: main\}AddrPE: [23\<--24]    %c = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b070 -> Node0x56545765b1b0[style=solid];
	Node0x56545765aeb0 [shape=record,color=black,label="{NodeID: 4\nIntraBlockNode ID: 4   %b = alloca double, align 8 \{fun: main\}AddrPE: [21\<--22]    %b = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765aeb0 -> Node0x56545765b070[style=solid];
	Node0x56545765ad50 [shape=record,color=black,label="{NodeID: 3\nIntraBlockNode ID: 3   %a = alloca double, align 8 \{fun: main\}AddrPE: [19\<--20]    %a = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765ad50 -> Node0x56545765aeb0[style=solid];
	Node0x56545765abb0 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   %retval = alloca i32, align 4 \{fun: main\}AddrPE: [17\<--18]    %retval = alloca i32, align 4\{  \}}"];
	Node0x56545765abb0 -> Node0x56545765ad50[style=solid];
	Node0x565457653400 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [4\<--1]  @.str = private unnamed_addr constant [32 x i8] c\"Enter coefficients a, b and c: \\00\", align 1\{ Glob  \}AddrPE: [6\<--1]  @.str.1 = private unnamed_addr constant [12 x i8] c\"%lf %lf %lf\\00\", align 1\{ Glob  \}AddrPE: [8\<--1]  @.str.2 = private unnamed_addr constant [32 x i8] c\"root1 = %.2lf and root2 = %.2lf\\00\", align 1\{ Glob  \}AddrPE: [10\<--1]  @.str.3 = private unnamed_addr constant [23 x i8] c\"root1 = root2 = %.2lf;\\00\", align 1\{ Glob  \}AddrPE: [12\<--1]  @.str.4 = private unnamed_addr constant [44 x i8] c\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\\00\", align 1\{ Glob  \}AddrPE: [4\<--1]  @.str = private unnamed_addr constant [32 x i8] c\"Enter coefficients a, b and c: \\00\", align 1\{ Glob  \}AddrPE: [6\<--1]  @.str.1 = private unnamed_addr constant [12 x i8] c\"%lf %lf %lf\\00\", align 1\{ Glob  \}AddrPE: [8\<--1]  @.str.2 = private unnamed_addr constant [32 x i8] c\"root1 = %.2lf and root2 = %.2lf\\00\", align 1\{ Glob  \}AddrPE: [10\<--1]  @.str.3 = private unnamed_addr constant [23 x i8] c\"root1 = root2 = %.2lf;\\00\", align 1\{ Glob  \}AddrPE: [12\<--1]  @.str.4 = private unnamed_addr constant [44 x i8] c\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\\00\", align 1\{ Glob  \}AddrPE: [14\<--15]  ; Function Attrs: noinline nounwind optnone uwtable\ndefine dso_local i32 @main() #0 !dbg !7 \{\nentry:\n  %retval = alloca i32, align 4\n  %a = alloca double, align 8\n  %b = alloca double, align 8\n  %c = alloca double, align 8\n  %discriminant = alloca double, align 8\n  %root1 = alloca double, align 8\n  %root2 = alloca double, align 8\n  %realPart = alloca double, align 8\n  %imagPart = alloca double, align 8\n  store i32 0, i32* %retval, align 4\n  call void @llvm.dbg.declare(metadata double* %a, metadata !11, metadata !DIExpression()), !dbg !13\n  call void @llvm.dbg.declare(metadata double* %b, metadata !14, metadata !DIExpression()), !dbg !15\n  call void @llvm.dbg.declare(metadata double* %c, metadata !16, metadata !DIExpression()), !dbg !17\n  call void @llvm.dbg.declare(metadata double* %discriminant, metadata !18, metadata !DIExpression()), !dbg !19\n  call void @llvm.dbg.declare(metadata double* %root1, metadata !20, metadata !DIExpression()), !dbg !21\n  call void @llvm.dbg.declare(metadata double* %root2, metadata !22, metadata !DIExpression()), !dbg !23\n  call void @llvm.dbg.declare(metadata double* %realPart, metadata !24, metadata !DIExpression()), !dbg !25\n  call void @llvm.dbg.declare(metadata double* %imagPart, metadata !26, metadata !DIExpression()), !dbg !27\n  %0 = getelementptr [32 x i8], [32 x i8]* @.str, i64 0, i64 0\n  %call = call i32 (i8*, ...) @printf(i8* %0), !dbg !28\n  %1 = getelementptr [12 x i8], [12 x i8]* @.str.1, i64 0, i64 0\n  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %1, double* %a, double* %b, double* %c), !dbg !29\n  %2 = load double, double* %b, align 8, !dbg !30\n  %3 = load double, double* %b, align 8, !dbg !31\n  %mul = fmul double %2, %3, !dbg !32\n  %4 = load double, double* %a, align 8, !dbg !33\n  %mul2 = fmul double 4.000000e+00, %4, !dbg !34\n  %5 = load double, double* %c, align 8, !dbg !35\n  %mul3 = fmul double %mul2, %5, !dbg !36\n  %sub = fsub double %mul, %mul3, !dbg !37\n  store double %sub, double* %discriminant, align 8, !dbg !38\n  %6 = load double, double* %discriminant, align 8, !dbg !39\n  %cmp = fcmp ogt double %6, 0.000000e+00, !dbg !41\n  br i1 %cmp, label %if.then, label %if.else, !dbg !42\n\nif.then:                                          ; preds = %entry\n  %7 = load double, double* %b, align 8, !dbg !43\n  %fneg = fneg double %7, !dbg !45\n  %8 = load double, double* %discriminant, align 8, !dbg !46\n  %call4 = call double @sqrt(double %8) #4, !dbg !47\n  %add = fadd double %fneg, %call4, !dbg !48\n  %9 = load double, double* %a, align 8, !dbg !49\n  %mul5 = fmul double 2.000000e+00, %9, !dbg !50\n  %div = fdiv double %add, %mul5, !dbg !51\n  store double %div, double* %root1, align 8, !dbg !52\n  %10 = load double, double* %b, align 8, !dbg !53\n  %fneg6 = fneg double %10, !dbg !54\n  %11 = load double, double* %discriminant, align 8, !dbg !55\n  %call7 = call double @sqrt(double %11) #4, !dbg !56\n  %sub8 = fsub double %fneg6, %call7, !dbg !57\n  %12 = load double, double* %a, align 8, !dbg !58\n  %mul9 = fmul double 2.000000e+00, %12, !dbg !59\n  %div10 = fdiv double %sub8, %mul9, !dbg !60\n  store double %div10, double* %root2, align 8, !dbg !61\n  %13 = load double, double* %root1, align 8, !dbg !62\n  %14 = load double, double* %root2, align 8, !dbg !63\n  %15 = getelementptr [32 x i8], [32 x i8]* @.str.2, i64 0, i64 0\n  %call11 = call i32 (i8*, ...) @printf(i8* %15, double %13, double %14), !dbg !64\n  br label %if.end27, !dbg !65\n\nif.else:                                          ; preds = %entry\n  %16 = load double, double* %discriminant, align 8, !dbg !66\n  %cmp12 = fcmp oeq double %16, 0.000000e+00, !dbg !68\n  br i1 %cmp12, label %if.then13, label %if.else18, !dbg !69\n\nif.then13:                                        ; preds = %if.else\n  %17 = load double, double* %b, align 8, !dbg !70\n  %fneg14 = fneg double %17, !dbg !72\n  %18 = load double, double* %a, align 8, !dbg !73\n  %mul15 = fmul double 2.000000e+00, %18, !dbg !74\n  %div16 = fdiv double %fneg14, %mul15, !dbg !75\n  store double %div16, double* %root2, align 8, !dbg !76\n  store double %div16, double* %root1, align 8, !dbg !77\n  %19 = load double, double* %root1, align 8, !dbg !78\n  %20 = getelementptr [23 x i8], [23 x i8]* @.str.3, i64 0, i64 0\n  %call17 = call i32 (i8*, ...) @printf(i8* %20, double %19), !dbg !79\n  br label %if.end, !dbg !80\n\nif.else18:                                        ; preds = %if.else\n  %21 = load double, double* %b, align 8, !dbg !81\n  %fneg19 = fneg double %21, !dbg !83\n  %22 = load double, double* %a, align 8, !dbg !84\n  %mul20 = fmul double 2.000000e+00, %22, !dbg !85\n  %div21 = fdiv double %fneg19, %mul20, !dbg !86\n  store double %div21, double* %realPart, align 8, !dbg !87\n  %23 = load double, double* %discriminant, align 8, !dbg !88\n  %fneg22 = fneg double %23, !dbg !89\n  %call23 = call double @sqrt(double %fneg22) #4, !dbg !90\n  %24 = load double, double* %a, align 8, !dbg !91\n  %mul24 = fmul double 2.000000e+00, %24, !dbg !92\n  %div25 = fdiv double %call23, %mul24, !dbg !93\n  store double %div25, double* %imagPart, align 8, !dbg !94\n  %25 = load double, double* %realPart, align 8, !dbg !95\n  %26 = load double, double* %imagPart, align 8, !dbg !96\n  %27 = load double, double* %realPart, align 8, !dbg !97\n  %28 = load double, double* %imagPart, align 8, !dbg !98\n  %29 = getelementptr [44 x i8], [44 x i8]* @.str.4, i64 0, i64 0\n  %call26 = call i32 (i8*, ...) @printf(i8* %29, double %25, double %26, double %27, double %28), !dbg !99\n  br label %if.end\n\nif.end:                                           ; preds = %if.else18, %if.then13\n  br label %if.end27\n\nif.end27:                                         ; preds = %if.end, %if.then\n  ret i32 0, !dbg !100\n\}\n\{ in line: 3 file: example.c \}AddrPE: [131\<--132]  ; Function Attrs: nounwind readnone speculatable willreturn\ndeclare void @llvm.dbg.declare(metadata, metadata, metadata) #1\n\{  \}AddrPE: [47\<--48]  declare dso_local i32 @printf(i8*, ...) #2\n\{  \}AddrPE: [51\<--52]  declare dso_local i32 @__isoc99_scanf(i8*, ...) #2\n\{  \}AddrPE: [71\<--72]  ; Function Attrs: nounwind\ndeclare dso_local double @sqrt(double) #3\n\{  \}}"];
	Node0x56545765aa60 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1Entry(\{ in line: 3 file: example.c \})\n \{fun: main\}}"];
	Node0x56545765aa60 -> Node0x565457653400[style=solid];
	Node0x56545765aa60 -> Node0x56545765abb0[style=solid];
	Node0x56545765b1b0 [shape=record,color=black,label="{NodeID: 6\nIntraBlockNode ID: 6   %discriminant = alloca double, align 8 \{fun: main\}AddrPE: [25\<--26]    %discriminant = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b1b0 -> Node0x56545765b2d0[style=solid];
	Node0x56545765b2d0 [shape=record,color=black,label="{NodeID: 7\nIntraBlockNode ID: 7   %root1 = alloca double, align 8 \{fun: main\}AddrPE: [27\<--28]    %root1 = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b2d0 -> Node0x56545765b430[style=solid];
	Node0x56545765b430 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   %root2 = alloca double, align 8 \{fun: main\}AddrPE: [29\<--30]    %root2 = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b430 -> Node0x56545765b670[style=solid];
	Node0x56545765b670 [shape=record,color=black,label="{NodeID: 9\nIntraBlockNode ID: 9   %realPart = alloca double, align 8 \{fun: main\}AddrPE: [31\<--32]    %realPart = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b670 -> Node0x56545765b790[style=solid];
	Node0x56545765b790 [shape=record,color=black,label="{NodeID: 10\nIntraBlockNode ID: 10   %imagPart = alloca double, align 8 \{fun: main\}AddrPE: [33\<--34]    %imagPart = alloca double, align 8\{ ln: 4 fl: example.c \}}"];
	Node0x56545765b790 -> Node0x56545765b8f0[style=solid];
	Node0x56545765b8f0 [shape=record,color=black,label="{NodeID: 11\nIntraBlockNode ID: 11   store i32 0, i32* %retval, align 4 \{fun: main\}}"];
	Node0x56545765b8f0 -> Node0x56545765ba50[style=solid];
	Node0x56545765ba50 [shape=record,color=black,label="{NodeID: 12\nIntraBlockNode ID: 12   %0 = getelementptr [32 x i8], [32 x i8]* @.str, i64 0, i64 0 \{fun: main\}VariantGepPE: [45\<--4]    %0 = getelementptr [32 x i8], [32 x i8]* @.str, i64 0, i64 0\{  \}}"];
	Node0x56545765ba50 -> Node0x5654576529e0[style=solid];
	Node0x5654576529e0 [shape=record,color=red,label="{NodeID: 13\nCallBlockNode ID: 13   %call = call i32 (i8*, ...) @printf(i8* %0), !dbg !28 \{fun: main\}|{|<s1>0x565457643a50}}"];
	Node0x5654576529e0 -> Node0x56545765bea0[style=solid];
	Node0x5654576529e0:s1 -> Node0x56545765bc10[style=solid,color=red];
	Node0x56545765bc10 [shape=record,color=yellow,label="{NodeID: 14\nFunEntryBlockNode ID: 14Entry()\n \{fun: printf\}}"];
	Node0x56545765bda0 [shape=record,color=black,label="{NodeID: 15\nIntraBlockNode ID: 15   %1 = getelementptr [12 x i8], [12 x i8]* @.str.1, i64 0, i64 0 \{fun: main\}VariantGepPE: [49\<--6]    %1 = getelementptr [12 x i8], [12 x i8]* @.str.1, i64 0, i64 0\{  \}}"];
	Node0x56545765bda0 -> Node0x56545763c3b0[style=solid];
	Node0x56545765e510 [shape=record,color=black,label="{NodeID: 36\nIntraBlockNode ID: 36   %8 = load double, double* %discriminant, align 8, !dbg !46 \{fun: main\}}"];
	Node0x56545765e510 -> Node0x56545763c530[style=solid];
	Node0x56545765e950 [shape=record,color=black,label="{NodeID: 37\nIntraBlockNode ID: 37   br i1 %cmp12, label %if.then13, label %if.else18, !dbg !69 \{fun: main\}}"];
	Node0x56545765e950 -> Node0x56545765ee10[style=solid];
	Node0x56545765e950 -> Node0x56545765efb0[style=solid];
	Node0x56545763c530 [shape=record,color=red,label="{NodeID: 38\nCallBlockNode ID: 38   %call4 = call double @sqrt(double %8) #4, !dbg !47 \{fun: main\}|{|<s1>0x565457646790}}"];
	Node0x56545763c530 -> Node0x56545765f290[style=solid];
	Node0x56545763c530:s1 -> Node0x56545765eb90[style=solid,color=red];
	Node0x56545765eb90 [shape=record,color=yellow,label="{NodeID: 39\nFunEntryBlockNode ID: 39Entry()\n \{fun: sqrt\}}"];
	Node0x56545765ee10 [shape=record,color=black,label="{NodeID: 40\nIntraBlockNode ID: 40   %17 = load double, double* %b, align 8, !dbg !70 \{fun: main\}}"];
	Node0x56545765ee10 -> Node0x56545765f520[style=solid];
	Node0x56545765efb0 [shape=record,color=black,label="{NodeID: 41\nIntraBlockNode ID: 41   %21 = load double, double* %b, align 8, !dbg !81 \{fun: main\}}"];
	Node0x56545765efb0 -> Node0x56545765f6e0[style=solid];
	Node0x56545765f1b0 [shape=record,color=black,label="{NodeID: 42\nIntraBlockNode ID: 42   %add = fadd double %fneg, %call4, !dbg !48 \{fun: main\}}"];
	Node0x56545765f1b0 -> Node0x56545765f8a0[style=solid];
	Node0x56545765f290 [shape=record,color=blue,label="{NodeID: 43\nRetBlockNode ID: 43   %call4 = call double @sqrt(double %8) #4, !dbg !47 \{fun: main\}}"];
	Node0x56545765f290 -> Node0x56545765f1b0[style=solid];
	Node0x56545765f520 [shape=record,color=black,label="{NodeID: 44\nIntraBlockNode ID: 44   %fneg14 = fneg double %17, !dbg !72 \{fun: main\}}"];
	Node0x56545765f520 -> Node0x56545765fce0[style=solid];
	Node0x56545765f6e0 [shape=record,color=black,label="{NodeID: 45\nIntraBlockNode ID: 45   %fneg19 = fneg double %21, !dbg !83 \{fun: main\}}"];
	Node0x56545765f6e0 -> Node0x565457660120[style=solid];
	Node0x56545765f8a0 [shape=record,color=black,label="{NodeID: 46\nIntraBlockNode ID: 46   %9 = load double, double* %a, align 8, !dbg !49 \{fun: main\}}"];
	Node0x56545765f8a0 -> Node0x5654576602e0[style=solid];
	Node0x56545765fce0 [shape=record,color=black,label="{NodeID: 47\nIntraBlockNode ID: 47   %18 = load double, double* %a, align 8, !dbg !73 \{fun: main\}}"];
	Node0x56545765fce0 -> Node0x5654576604a0[style=solid];
	Node0x565457660120 [shape=record,color=black,label="{NodeID: 48\nIntraBlockNode ID: 48   %22 = load double, double* %a, align 8, !dbg !84 \{fun: main\}}"];
	Node0x565457660120 -> Node0x565457660660[style=solid];
	Node0x5654576602e0 [shape=record,color=black,label="{NodeID: 49\nIntraBlockNode ID: 49   %mul5 = fmul double 2.000000e+00, %9, !dbg !50 \{fun: main\}}"];
	Node0x5654576602e0 -> Node0x565457660820[style=solid];
	Node0x5654576604a0 [shape=record,color=black,label="{NodeID: 50\nIntraBlockNode ID: 50   %mul15 = fmul double 2.000000e+00, %18, !dbg !74 \{fun: main\}}"];
	Node0x5654576604a0 -> Node0x5654576609e0[style=solid];
	Node0x565457660660 [shape=record,color=black,label="{NodeID: 51\nIntraBlockNode ID: 51   %mul20 = fmul double 2.000000e+00, %22, !dbg !85 \{fun: main\}}"];
	Node0x565457660660 -> Node0x565457660ba0[style=solid];
	Node0x565457660820 [shape=record,color=black,label="{NodeID: 52\nIntraBlockNode ID: 52   %div = fdiv double %add, %mul5, !dbg !51 \{fun: main\}}"];
	Node0x565457660820 -> Node0x565457660d60[style=solid];
	Node0x5654576609e0 [shape=record,color=black,label="{NodeID: 53\nIntraBlockNode ID: 53   %div16 = fdiv double %fneg14, %mul15, !dbg !75 \{fun: main\}}"];
	Node0x5654576609e0 -> Node0x565457660f20[style=solid];
	Node0x565457660ba0 [shape=record,color=black,label="{NodeID: 54\nIntraBlockNode ID: 54   %div21 = fdiv double %fneg19, %mul20, !dbg !86 \{fun: main\}}"];
	Node0x565457660ba0 -> Node0x5654576610e0[style=solid];
	Node0x565457660d60 [shape=record,color=black,label="{NodeID: 55\nIntraBlockNode ID: 55   store double %div, double* %root1, align 8, !dbg !52 \{fun: main\}}"];
	Node0x565457660d60 -> Node0x5654576612a0[style=solid];
	Node0x565457660f20 [shape=record,color=black,label="{NodeID: 56\nIntraBlockNode ID: 56   store double %div16, double* %root2, align 8, !dbg !76 \{fun: main\}}"];
	Node0x565457660f20 -> Node0x565457661460[style=solid];
	Node0x5654576610e0 [shape=record,color=black,label="{NodeID: 57\nIntraBlockNode ID: 57   store double %div21, double* %realPart, align 8, !dbg !87 \{fun: main\}}"];
	Node0x5654576610e0 -> Node0x565457661620[style=solid];
	Node0x5654576612a0 [shape=record,color=black,label="{NodeID: 58\nIntraBlockNode ID: 58   %10 = load double, double* %b, align 8, !dbg !53 \{fun: main\}}"];
	Node0x5654576612a0 -> Node0x5654576617e0[style=solid];
	Node0x565457661460 [shape=record,color=black,label="{NodeID: 59\nIntraBlockNode ID: 59   store double %div16, double* %root1, align 8, !dbg !77 \{fun: main\}}"];
	Node0x565457661460 -> Node0x5654576619a0[style=solid];
	Node0x565457661620 [shape=record,color=black,label="{NodeID: 60\nIntraBlockNode ID: 60   %23 = load double, double* %discriminant, align 8, !dbg !88 \{fun: main\}}"];
	Node0x565457661620 -> Node0x565457661b60[style=solid];
	Node0x5654576617e0 [shape=record,color=black,label="{NodeID: 61\nIntraBlockNode ID: 61   %fneg6 = fneg double %10, !dbg !54 \{fun: main\}}"];
	Node0x5654576617e0 -> Node0x565457661d20[style=solid];
	Node0x5654576619a0 [shape=record,color=black,label="{NodeID: 62\nIntraBlockNode ID: 62   %19 = load double, double* %root1, align 8, !dbg !78 \{fun: main\}}"];
	Node0x5654576619a0 -> Node0x565457661ee0[style=solid];
	Node0x565457661b60 [shape=record,color=black,label="{NodeID: 63\nIntraBlockNode ID: 63   %fneg22 = fneg double %23, !dbg !89 \{fun: main\}}"];
	Node0x565457661b60 -> Node0x56545764f100[style=solid];
	Node0x565457661d20 [shape=record,color=black,label="{NodeID: 64\nIntraBlockNode ID: 64   %11 = load double, double* %discriminant, align 8, !dbg !55 \{fun: main\}}"];
	Node0x565457661d20 -> Node0x56545763b8f0[style=solid];
	Node0x565457661ee0 [shape=record,color=black,label="{NodeID: 65\nIntraBlockNode ID: 65   %20 = getelementptr [23 x i8], [23 x i8]* @.str.3, i64 0, i64 0 \{fun: main\}VariantGepPE: [105\<--10]    %20 = getelementptr [23 x i8], [23 x i8]* @.str.3, i64 0, i64 0\{  \}}"];
	Node0x565457661ee0 -> Node0x565457636240[style=solid];
	Node0x56545764f100 [shape=record,color=red,label="{NodeID: 66\nCallBlockNode ID: 66   %call23 = call double @sqrt(double %fneg22) #4, !dbg !90 \{fun: main\}|{|<s1>0x56545764b9f0}}"];
	Node0x56545764f100 -> Node0x565457662650[style=solid];
	Node0x56545764f100:s1 -> Node0x56545765eb90[style=solid,color=red];
	Node0x56545763b8f0 [shape=record,color=red,label="{NodeID: 67\nCallBlockNode ID: 67   %call7 = call double @sqrt(double %11) #4, !dbg !56 \{fun: main\}|{|<s1>0x565457647aa0}}"];
	Node0x56545763b8f0 -> Node0x5654576629c0[style=solid];
	Node0x56545763b8f0:s1 -> Node0x56545765eb90[style=solid,color=red];
	Node0x565457636240 [shape=record,color=red,label="{NodeID: 68\nCallBlockNode ID: 68   %call17 = call i32 (i8*, ...) @printf(i8* %20, double %19), !dbg !79 \{fun: main\}|{|<s1>0x56545764a0f8}}"];
	Node0x565457636240 -> Node0x565457662d30[style=solid];
	Node0x565457636240:s1 -> Node0x56545765bc10[style=solid,color=red];
	Node0x565457662550 [shape=record,color=black,label="{NodeID: 69\nIntraBlockNode ID: 69   %24 = load double, double* %a, align 8, !dbg !91 \{fun: main\}}"];
	Node0x565457662550 -> Node0x565457662fa0[style=solid];
	Node0x565457662650 [shape=record,color=blue,label="{NodeID: 70\nRetBlockNode ID: 70   %call23 = call double @sqrt(double %fneg22) #4, !dbg !90 \{fun: main\}}"];
	Node0x565457662650 -> Node0x565457662550[style=solid];
	Node0x5654576628c0 [shape=record,color=black,label="{NodeID: 71\nIntraBlockNode ID: 71   %sub8 = fsub double %fneg6, %call7, !dbg !57 \{fun: main\}}"];
	Node0x5654576628c0 -> Node0x565457663160[style=solid];
	Node0x5654576629c0 [shape=record,color=blue,label="{NodeID: 72\nRetBlockNode ID: 72   %call7 = call double @sqrt(double %11) #4, !dbg !56 \{fun: main\}}"];
	Node0x5654576629c0 -> Node0x5654576628c0[style=solid];
	Node0x565457662c30 [shape=record,color=black,label="{NodeID: 73\nIntraBlockNode ID: 73   br label %if.end, !dbg !80 \{fun: main\}}"];
	Node0x565457662c30 -> Node0x565457663320[style=solid];
	Node0x565457662d30 [shape=record,color=blue,label="{NodeID: 74\nRetBlockNode ID: 74   %call17 = call i32 (i8*, ...) @printf(i8* %20, double %19), !dbg !79 \{fun: main\}}"];
	Node0x565457662d30 -> Node0x565457662c30[style=solid];
	Node0x565457662fa0 [shape=record,color=black,label="{NodeID: 75\nIntraBlockNode ID: 75   %mul24 = fmul double 2.000000e+00, %24, !dbg !92 \{fun: main\}}"];
	Node0x565457662fa0 -> Node0x5654576634e0[style=solid];
	Node0x565457663160 [shape=record,color=black,label="{NodeID: 76\nIntraBlockNode ID: 76   %12 = load double, double* %a, align 8, !dbg !58 \{fun: main\}}"];
	Node0x565457663160 -> Node0x565457663be0[style=solid];
	Node0x565457663320 [shape=record,color=black,label="{NodeID: 77\nIntraBlockNode ID: 77   br label %if.end27 \{fun: main\}}"];
	Node0x565457663320 -> Node0x565457663da0[style=solid];
}
